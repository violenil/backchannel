

import argparse

import matplotlib.pyplot as plt
import os

def report2loss(report_file, plot_output):
    """
    Creates a graph showing the accuracies and losses over epochs.
    :param model_name: path to the csv file with the reported accuracies and losses (generated by ConvNet.reported_fit).
    """
    contents = open(report_file,"r").read().split('\n')

    times = []
    accuracies = []
    losses = []

    val_accs = []
    val_losses = []
    #print(contents)
    for c in contents:

        try:
            name,timestamp,acc,loss,val_acc,val_loss = c.split(",")
        except Exception as e:
            print(c)
        times.append(float(timestamp))
        accuracies.append(float(acc))
        losses.append(float(loss))
        val_accs.append(float(val_acc))
        val_losses.append(float(val_loss))

    fig = plt.figure()
    ax1 = plt.subplot2grid((2,1),(0,0))
    ax2 = plt.subplot2grid((2,1),(1,0),sharex=ax1)

    ax1.plot(times,accuracies,label="acc")
    ax1.plot(times,val_accs,label="val_acc")
    ax1.legend(loc=2)

    ax2.plot(times,losses,label="loss")
    ax2.plot(times,val_losses,label="val_loss")
    ax2.legend(loc=2)



    fig.savefig("./plots/" + plot_output + ".pdf")

    plt.close(fig)


def parse_args():
    parser = argparse.ArgumentParser(description='This code converts report files into handy plots to ease data visualization.')

    parser.add_argument('report_folder', help='Folder containing the reports. Each file should follow the format:'
                                         ' <file_id>,<epoch>,<training_acc>,<training_loss>,<validation_acc>,<validation_loss>\\n ')

    return parser.parse_args()


if __name__ == '__main__':


    args = parse_args()

    directory = os.path.dirname("plots/")
    try:
        os.stat(directory)
    except:
        os.mkdir(directory)


    for file in os.listdir(args.report_folder):
        print(os.path.join(args.report_folder, file))
        report2loss(os.path.join(args.report_folder, file),file)







